// Generated by view binder compiler. Do not edit!
package com.jrutkin.listwiz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jrutkin.listwiz.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddTaskBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button AddButton;

  @NonNull
  public final EditText AddETTaskDesc;

  @NonNull
  public final EditText AddETTaskTitle;

  @NonNull
  public final TextView AddTVTaskDescHeader;

  @NonNull
  public final TextView AddTVTaskTitleHeader;

  @NonNull
  public final TextView AddTVTitle;

  @NonNull
  public final Spinner AddTaskSpinner;

  private ActivityAddTaskBinding(@NonNull ConstraintLayout rootView, @NonNull Button AddButton,
      @NonNull EditText AddETTaskDesc, @NonNull EditText AddETTaskTitle,
      @NonNull TextView AddTVTaskDescHeader, @NonNull TextView AddTVTaskTitleHeader,
      @NonNull TextView AddTVTitle, @NonNull Spinner AddTaskSpinner) {
    this.rootView = rootView;
    this.AddButton = AddButton;
    this.AddETTaskDesc = AddETTaskDesc;
    this.AddETTaskTitle = AddETTaskTitle;
    this.AddTVTaskDescHeader = AddTVTaskDescHeader;
    this.AddTVTaskTitleHeader = AddTVTaskTitleHeader;
    this.AddTVTitle = AddTVTitle;
    this.AddTaskSpinner = AddTaskSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AddButton;
      Button AddButton = ViewBindings.findChildViewById(rootView, id);
      if (AddButton == null) {
        break missingId;
      }

      id = R.id.AddETTaskDesc;
      EditText AddETTaskDesc = ViewBindings.findChildViewById(rootView, id);
      if (AddETTaskDesc == null) {
        break missingId;
      }

      id = R.id.AddETTaskTitle;
      EditText AddETTaskTitle = ViewBindings.findChildViewById(rootView, id);
      if (AddETTaskTitle == null) {
        break missingId;
      }

      id = R.id.AddTVTaskDescHeader;
      TextView AddTVTaskDescHeader = ViewBindings.findChildViewById(rootView, id);
      if (AddTVTaskDescHeader == null) {
        break missingId;
      }

      id = R.id.AddTVTaskTitleHeader;
      TextView AddTVTaskTitleHeader = ViewBindings.findChildViewById(rootView, id);
      if (AddTVTaskTitleHeader == null) {
        break missingId;
      }

      id = R.id.AddTVTitle;
      TextView AddTVTitle = ViewBindings.findChildViewById(rootView, id);
      if (AddTVTitle == null) {
        break missingId;
      }

      id = R.id.AddTaskSpinner;
      Spinner AddTaskSpinner = ViewBindings.findChildViewById(rootView, id);
      if (AddTaskSpinner == null) {
        break missingId;
      }

      return new ActivityAddTaskBinding((ConstraintLayout) rootView, AddButton, AddETTaskDesc,
          AddETTaskTitle, AddTVTaskDescHeader, AddTVTaskTitleHeader, AddTVTitle, AddTaskSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
